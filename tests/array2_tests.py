import sys
sys.path.append('')

import unittest
import solutions.array2 as array2

class TestArray2(unittest.TestCase):
    def test_count_evens(self):
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
        self.assertEqual(array2.count_evens(), )
    
    def test_big_diff(self):
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )
        self.assertEqual(array2.big_diff(), )

    def test_centered_average(self):
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
        self.assertEqual(array2.centered_average(), )
    
    def test_sum_13(self):
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
        self.assertEqual(array2.sum_13(), )
    
    def test_sum_67(self):
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
        self.assertEqual(array2.sum_67(), )
    
    def test_has_22(self):
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
        self.assertEqual(array2.has_22(), )
    
    def test_luckey_13(self):
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
        self.assertEqual(array2.lucky_13(), )
    
    def test_sum_28(self):
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )
        self.assertEqual(array2.sum_28(), )

    def test_more_14(self):
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
        self.assertEqual(array2.more_14(), )
    
    def test_fizz_array(self):
        self.assertEqual(array2.fizz_array(), )
        self.assertEqual(array2.fizz_array(), )
        self.assertEqual(array2.fizz_array(), )
        self.assertEqual(array2.fizz_array(), )
        self.assertEqual(array2.fizz_array(), )
        self.assertEqual(array2.fizz_array(), )
    
    def test_only_14(self):
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
        self.assertEqual(array2.only_14(), )
    
    def test_fizz_array_2(self):
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
        self.assertEqual(array2.fizz_array_2(), )
    
    def test_no_14(self):
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
        self.assertEqual(array2.no_14(), )
    
    def test_is_everywhere(self):
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
        self.assertEqual(array2.is_everywhere(), )
    
    def test_either_24(self):
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
        self.assertEqual(array2.either_24(), )
    
    def test_match_up(self):
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )
        self.assertEqual(array2.match_up(), )

    def test_has_77(self):
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
        self.assertEqual(array2.has_77(), )
    
    def test_has_12(self):
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
        self.assertEqual(array2.has_12(), )
    
    def test_mod_three(self):
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
        self.assertEqual(array2.mod_three(), )
    
    def test_have_three(self):
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
        self.assertEqual(array2.have_three(), )
    
    def test_two_two(self):
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
        self.assertEqual(array2.two_two(), )
    
    def test_same_ends(self):
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
        self.assertEqual(array2.same_ends(), )
    
    def test_triple_up(self):
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
        self.assertEqual(array2.triple_up(), )
    
    def test_fizz_array_3(self):
        self.assertEqual(array2.fizz_array_3(), )
        self.assertEqual(array2.fizz_array_3(), )
        self.assertEqual(array2.fizz_array_3(), )
        self.assertEqual(array2.fizz_array_3(), )
        self.assertEqual(array2.fizz_array_3(), )
        self.assertEqual(array2.fizz_array_3(), )

    def test_shift_left(self):
        self.assertEqual(array2.shift_left(), )
        self.assertEqual(array2.shift_left(), )
        self.assertEqual(array2.shift_left(), )
        self.assertEqual(array2.shift_left(), )
        self.assertEqual(array2.shift_left(), )
        self.assertEqual(array2.shift_left(), )
        self.assertEqual(array2.shift_left(), )
    
    def test_ten_run(self):
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
        self.assertEqual(array2.ten_run(), )
    
    def test_pre_4(self):
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
        self.assertEqual(array2.pre_4(), )
    
    def test_post_4(self):
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
        self.assertEqual(array2.post_4(), )
    
    def test_not_alone(self):
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
        self.assertEqual(array2.not_alone(), )
    
    def test_zero_front(self):
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
        self.assertEqual(array2.zero_front(), )
    
    def test_without_ten(self):
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
        self.assertEqual(array2.without_ten(), )
    
    def test_zero_max(self):
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
        self.assertEqual(array2.zero_max(), )
    
    def test_even_odd(self):
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )
        self.assertEqual(array2.even_odd(), )

    def test_fizz_buzz(self):
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )
        self.assertEqual(array2.fizz_buzz(), )

if __name__ == '__main__':
    unittest.main()